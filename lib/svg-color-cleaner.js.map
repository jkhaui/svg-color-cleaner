{"version":3,"sources":["webpack://svg-color-cleaner/webpack/universalModuleDefinition","webpack://svg-color-cleaner/./src/SVGColorCleaner.js","webpack://svg-color-cleaner/./src/index.js","webpack://svg-color-cleaner/webpack/bootstrap","webpack://svg-color-cleaner/webpack/runtime/define property getters","webpack://svg-color-cleaner/webpack/runtime/hasOwnProperty shorthand","webpack://svg-color-cleaner/webpack/runtime/make namespace object","webpack://svg-color-cleaner/webpack/startup"],"names":["SVGColorCleaner","fillColor","strokeColor","newSvg","node","hasFillAttribute","hasAttribute","FILL_ATTRIBUTE","window","getComputedStyle","getPropertyValue","hasStrokeAttribute","STROKE_ATTRIBUTE","removeAttribute","setAttribute","FILL_COLOR","STROKE_COLOR","appendChild","oldSvg","_stroke","getAttribute","_fill","WIDTH_ATTRIBUTE","_width","HEIGHT_ATTRIBUTE","_height","VIEWBOX_ATTRIBUTE","_viewBox","nodeType","nodeName","SVG_NODE","copySvgAttributes","RECT_NODE","TEXT_NODE","CIRCLE_NODE","PATH_NODE","mutateAttribute","DEFS_NODE","GLOBAL_NODE","grandchildNodes","childNodes","grandchildrenCollection","grandchildrenLength","length","i","traverseChildren","CLIPPATH_NODE","MASK_NODE","fileData","parser","DOMParser","vDom","parseFromString","children","document","createElementNS","childrenCollection","all","parentLength","throwError","mutate","Error","removeChild","serializer","XMLSerializer","stringifiedSvg","serializeToString"],"mappings":"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","file":"svg-color-cleaner.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"svg-color-cleaner\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"svg-color-cleaner\"] = factory();\n\telse\n\t\troot[\"svg-color-cleaner\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","export default class SVGColorCleaner {\n  constructor({\n    fillColor = \"#000\",\n    strokeColor = \"#000\",\n  }) {\n    // Define global variables.\n    this.FILL_ATTRIBUTE = \"fill\";\n    this.SVG_NODE = \"svg\";\n\n    // Low-level nodes.\n    this.PATH_NODE = \"path\";\n    this.RECT_NODE = \"rect\";\n    this.CIRCLE_NODE = \"circle\";\n    this.TEXT_NODE = \"#text\";\n\n    // Wrapper nodes.\n    this.GLOBAL_NODE = \"g\";\n    this.MASK_NODE = \"mask\";\n    this.DEFS_NODE = \"defs\";\n    this.CLIPPATH_NODE = \"clipPath\";\n\n    this.STROKE_ATTRIBUTE = \"stroke\";\n\n    // SVG attributes to be copied onto the virtual SVG.\n    this.WIDTH_ATTRIBUTE = \"width\";\n    this.HEIGHT_ATTRIBUTE = \"height\";\n    this.VIEWBOX_ATTRIBUTE = \"viewBox\";\n\n    this.FILL_COLOR = fillColor;\n    this.STROKE_COLOR = strokeColor;\n  }\n\n  mutateAttribute = (newSvg, node) => {\n    const hasFillAttribute =\n      node.hasAttribute(this.FILL_ATTRIBUTE) ||\n      window\n        .getComputedStyle(node)\n        .getPropertyValue(this.FILL_ATTRIBUTE) !== \"none\";\n    const hasStrokeAttribute =\n      node.hasAttribute(this.STROKE_ATTRIBUTE) ||\n      window\n        .getComputedStyle(node)\n        .getPropertyValue(this.STROKE_ATTRIBUTE) !== \"none\";\n\n    if (hasFillAttribute) {\n      node.removeAttribute(this.FILL_ATTRIBUTE);\n      node.setAttribute(\"style\", `fill: ${this.FILL_COLOR}`);\n    }\n\n    // TODO: FInd a way to handle transparent strokes.\n    if (hasStrokeAttribute) {\n      node.removeAttribute(this.STROKE_ATTRIBUTE);\n      node.setAttribute(\"style\", `stroke: ${this.STROKE_COLOR}`);\n    }\n\n    newSvg.appendChild(node);\n  };\n\n  copySvgAttributes = (oldSvg, newSvg) => {\n    if (oldSvg.hasAttribute(this.STROKE_ATTRIBUTE)) {\n      const _stroke = oldSvg.getAttribute(this.STROKE_ATTRIBUTE);\n\n      if (_stroke) {\n        newSvg.setAttribute(this.STROKE_ATTRIBUTE, _stroke);\n      }\n    }\n    if (oldSvg.hasAttribute(this.FILL_ATTRIBUTE)) {\n      const _fill = oldSvg.getAttribute(this.FILL_ATTRIBUTE);\n\n      if (_fill) {\n        newSvg.setAttribute(this.FILL_ATTRIBUTE, _fill);\n      }\n    }\n    if (oldSvg.hasAttribute(this.WIDTH_ATTRIBUTE)) {\n      const _width = oldSvg.getAttribute(this.WIDTH_ATTRIBUTE);\n\n      if (_width) {\n        newSvg.setAttribute(this.WIDTH_ATTRIBUTE, _width);\n      }\n    }\n    if (oldSvg.hasAttribute(this.HEIGHT_ATTRIBUTE)) {\n      const _height = oldSvg.getAttribute(this.HEIGHT_ATTRIBUTE);\n\n      if (_height) {\n        newSvg.setAttribute(this.HEIGHT_ATTRIBUTE, _height);\n      }\n    }\n    if (oldSvg.hasAttribute(this.VIEWBOX_ATTRIBUTE)) {\n      const _viewBox = oldSvg.getAttribute(this.VIEWBOX_ATTRIBUTE);\n\n      if (_viewBox) {\n        newSvg.setAttribute(this.VIEWBOX_ATTRIBUTE, _viewBox);\n      }\n    }\n  };\n\n  traverseChildren = (oldSvg, newSvg, node) => {\n    const nodeType = node.nodeName;\n\n    switch (nodeType) {\n      case this.SVG_NODE:\n        this.copySvgAttributes(oldSvg, newSvg, node);\n        break;\n      // TODO: do NOT apply styling to rect nodes for now... It appears to\n      // ruin the svg.\n      case this.RECT_NODE:\n      case this.TEXT_NODE:\n        break;\n      case this.CIRCLE_NODE:\n      case this.PATH_NODE:\n        this.mutateAttribute(newSvg, node);\n        break;\n      case this.DEFS_NODE:\n      case this.GLOBAL_NODE:\n        // Declare a variable with (what is assumed to be) the low-level SVG\n        // element.\n        const grandchildNodes = node.childNodes;\n        const grandchildrenCollection = grandchildNodes;\n        const grandchildrenLength = grandchildNodes.length;\n\n        // const grandchildNodeType = grandchildNodes.nodeName;\n        // const hasGreatGrandChildren =\n        //   grandchildNodes.length > 0;\n        // const grandchildNodeCount = grandchildNodes.length;\n\n        let i = -1;\n\n        if (++i < grandchildrenLength) {\n          do {\n            if (grandchildrenCollection[i]) {\n              this.traverseChildren(oldSvg, newSvg, grandchildrenCollection[i]);\n            }\n          }\n          while (++i < grandchildrenCollection);\n        }\n\n        // First-child nodes, e.g. <g>, <defs>, etc.\n        // if (++i < grandchildNodeCount) do {\n        //   console.log(grandchildrenCollection[i]);\n        //   if (hasGreatGrandChildren) {\n        //     // TODO: handle recursive looping through n layers of child\n        // nodes. // const greatGrandChild = ... //\n        // this.mutateAttribute(greatGrandChild); return; } } while (++i <\n        // grandchildNodeCount);\n        break;\n      case this.CLIPPATH_NODE:\n      case this.MASK_NODE:\n      default:\n        // An exception error message is passed back to the caller if any of\n        // the above nodes, or otherwise unknown node types, are detected.\n        return false;\n    }\n  };\n\n  renderVirtualSvg = async (fileData) => {\n    // 1. Instantiate a new virtual DOM instance.\n    // This creates an empty document node in-memory, with an empty svg element\n    // as the single child node.\n    const parser = new DOMParser();\n    const vDom = parser.parseFromString(fileData, \"image/svg+xml\");\n    const oldSvg = vDom.children[0];\n\n    const newSvg =\n      document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    const childrenCollection = vDom.all;\n\n    // Cache the length prop to maximise performance.\n    const parentLength = childrenCollection.length;\n\n    let i = -1;\n    let throwError = false;\n\n    // 2. Iterate through, and extract, all the low-level SVG elements.\n    if (++i < parentLength) {\n      do {\n        if (childrenCollection[i]) {\n          const mutate = this.traverseChildren(\n            oldSvg,\n            newSvg,\n            childrenCollection[i],\n          );\n          if ((childrenCollection[i] || {}).nodeName ===\n              this.PATH_NODE && i > 0) {\n            i--;\n          }\n\n          if (mutate === false) {\n            throwError = true;\n          }\n        }\n      }\n      while (++i < parentLength);\n    }\n\n    if (throwError) {\n      return Error(\"Unidentified node type.\");\n    }\n\n    vDom.removeChild(oldSvg);\n    vDom.appendChild(newSvg);\n    const serializer = new XMLSerializer();\n    const stringifiedSvg = serializer.serializeToString(vDom);\n\n    // Returns the cleaned SVG string as a promise, if successful.\n    return stringifiedSvg;\n  };\n}\n","import SVGColorCleaner from \"./SVGColorCleaner.js\";\n\nexport default { SVGColorCleaner };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/index.js\");\n"],"sourceRoot":""}